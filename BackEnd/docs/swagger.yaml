definitions:
  match.Match:
    properties:
      bool:
        type: boolean
      id:
        type: integer
      player1_id:
        type: integer
      player2_id:
        type: integer
    type: object
  player.Player:
    properties:
      created_at:
        type: integer
      display_name:
        type: string
      elo:
        type: integer
      history:
        items:
          $ref: '#/definitions/match.Match'
        type: array
      id:
        type: integer
      username:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:6969
info:
  contact: {}
  title: CyberSinuca API
  version: 0.0.1
paths:
  /api/history:
    get:
      consumes:
      - application/json
      description: get all players history
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/match.Match'
            type: array
      summary: Get all players history
  /api/history/{name}:
    get:
      consumes:
      - application/json
      description: get specified player history
      parameters:
      - description: Player Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/match.Match'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get player history by name
  /api/player:
    get:
      consumes:
      - application/json
      description: get players
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/player.Player'
            type: array
      summary: List players
  /api/player/{username}:
    get:
      consumes:
      - application/json
      description: get specified player info
      parameters:
      - description: Player Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/player.Player'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get player information by name
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
